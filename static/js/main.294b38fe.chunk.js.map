{"version":3,"sources":["objects/ClassType.ts","objects/TripType.ts","components/FlightPanel.tsx","components/ResultTable.tsx","objects/SearchRequest.ts","App.tsx","serviceWorker.js","index.tsx"],"names":["ClassType","TripType","FlightPanel","props","flight","route","map","index","Container","key","Row","className","departure","moment","format","diff","arrival","Col","sm","Badge","pill","variant","classType","title","source","displayName","name","target","alt","airline","src","ResultTable","trips","trip","outwardFlight","duration","returnFlight","price","href","link","rel","Button","SearchRequest","limit","tripType","RoundTrip","Economy","mixClasses","passengers","radius","return","stops","apiUrl","process","tripTypes","t","push","classTypes","c","App","state","request","searching","allowNew","isLoading","multiple","options","departureFlexible","departureFocused","departureSpanFocused","returnFlexible","returnFocused","returnSpanFocused","airlineFilter","airportFilter","attr","value","temp","this","setState","axios","post","then","result","data","filteredTrips","initTripFilters","catch","error","console","get","date","Date","dateToMoment","from","returnDate","isAfter","changeRequest","airlines","forEach","includes","foundAirlines","sourceAirports","airport","keepTrip","outwardRoute","outwardAirport","returnRoute","returnAirport","length","Navbar","Brand","width","height","Form","DropdownButton","id","onSelect","eventKey","Dropdown","Item","indexOf","getPassengerTitle","Control","type","min","defaultValue","onChange","event","Divider","Check","label","defaultChecked","checked","ButtonGroup","vertical","max","step","Group","as","controlId","labelKey","placeholder","minLength","onSearch","query","getAirports","airports","renderMenu","menuProps","option","position","lg","InputGroup","Append","Text","ToggleButtonGroup","ToggleButton","firstDayOfWeek","startDate","startDateId","endDate","to","endDateId","onDatesChange","focusedInput","onFocusChange","focused","displayFormat","noBorder","onDateChange","returnTime","initReturnDate","onClick","performSearch","ProgressBar","animated","now","filterTrips","React","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.294b38fe.chunk.js","sourcesContent":["export enum ClassType {\n  Economy = \"Economy\",\n  PremiumEconomy = \"Premium Economy\",\n  Business = \"Business\",\n  FirstClass = \"First class\"\n}\n","export enum TripType {\n  RoundTrip = \"Round trip\",\n  OneWay = \"One-way\"\n}\n","import moment from \"moment\";\nimport * as React from \"react\";\nimport { Badge, Col, Container, Row } from \"react-bootstrap\";\nimport { IoIosAirplane as Airplane, IoMdCalendar as Calendar } from \"react-icons/io\";\nimport { Flight } from \"../objects/Flight\";\nimport { Route } from \"../objects/Route\";\n\nexport function FlightPanel(props: any) {\n  if (props.flight) {\n    const flight: Flight = props.flight;\n    return (\n      <div>\n        {flight.route\n          ? flight.route.map((route: Route, index: number) => {\n              return (\n                <Container key={index}>\n                  <Row className=\"mb-1\">\n                    <div>\n                      <big>\n                        <Calendar />{\" \"}\n                      </big>\n                      {route.departure\n                        ? moment(route.departure).format(\"ddd D MMM\")\n                        : \"\"}\n                      {moment(route.departure).diff(route.arrival, \"days\") !== 0\n                        ? ` - ${moment(route.arrival).format(\"ddd D MMM\")}`\n                        : \"\"}\n                    </div>\n                  </Row>\n                  <Row className=\"mb-1\">\n                    <Col sm={1}>\n                      <Airplane />\n                    </Col>\n                    <Col>\n                      <Badge pill variant=\"light\">\n                        {route.classType}\n                      </Badge>\n                    </Col>\n                  </Row>\n                  <Row className=\"mb-3\">\n                    <Col className=\"border rounded\">\n                      <div className=\"p-2\">\n                        <div>\n                          <strong\n                            title={moment(route.departure).format(\"ddd D MMM\")}\n                          >\n                            {route.departure\n                              ? moment(route.departure).format(\"HH:mm\")\n                              : \"\"}\n                          </strong>{\" \"}\n                          {route.source?.displayName} {route.source?.name}\n                        </div>\n                        <div>\n                          <strong\n                            title={moment(route.arrival).format(\"ddd D MMM\")}\n                          >\n                            {route.arrival\n                              ? moment(route.arrival).format(\"HH:mm\")\n                              : \"\"}\n                          </strong>{\" \"}\n                          {route.target?.displayName} {route.target?.name}\n                        </div>\n                      </div>\n                    </Col>\n                    <Col sm={3}>\n                      <img\n                        className=\"border rounded\"\n                        alt={`Airline ${route.airline}`}\n                        src={`https://images.kiwi.com/airlines/64/${route.airline}.png`}\n                      />\n                    </Col>\n                  </Row>\n                </Container>\n              );\n            })\n          : \"\"}\n      </div>\n    );\n  }\n  return <div></div>;\n}\n","import * as React from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { Trip } from \"../objects/Trip\";\nimport { FlightPanel } from \"./FlightPanel\";\n\nexport function ResultTable(props: any) {\n  if (props.trips) {\n    return (\n      <div>\n        {props.trips.map((trip: Trip, index: number) => {\n          return (\n            <Container\n              className=\"mb-3 border-bottom border-5\"\n              key={index}\n            >\n              <Row>\n                <Col>\n                  <div className=\"mb-2\">\n                    <b>DEPARTURE</b> Duration: {trip.outwardFlight?.duration}\n                  </div>\n                  <FlightPanel flight={trip.outwardFlight} />\n                </Col>\n                {trip.returnFlight ? (\n                  <Col>\n                    <div className=\"mb-2\">\n                      <b>RETURN</b> Duration: {trip.returnFlight.duration}\n                    </div>\n                    <FlightPanel flight={trip.returnFlight} />\n                  </Col>\n                ) : (\n                  \"\"\n                )}\n                <Col sm={1}>\n                  <Row>\n                    <h2>{trip.price}&nbsp;€</h2>\n                  </Row>\n                  <Row className=\"mt-3\">\n                    <a\n                      href={trip.link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <Button variant=\"success\">Book</Button>\n                    </a>\n                  </Row>\n                </Col>\n              </Row>\n            </Container>\n          );\n        })}\n      </div>\n    );\n  }\n  return <div></div>;\n}\n","import { Airport } from \"./Airport\";\nimport { ClassType } from \"./ClassType\";\nimport { Timespan } from \"./Timespan\";\nimport { TripType } from \"./TripType\";\n\nexport class SearchRequest {\n  public limit?: number = 10;\n\n  public tripType?: TripType = TripType.RoundTrip;\n  public classType?: ClassType = ClassType.Economy;\n  public mixClasses?: Boolean = true;\n  public passengers?: number = 1;\n\n  public source?: Airport;\n  public radius?: number;\n  public target?: Airport;\n\n  public departure?: Timespan;\n  public return?: Timespan;\n\n  public stops?: number;\n}\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport * as React from \"react\";\nimport { Button, ButtonGroup, Col, Dropdown, DropdownButton, Form, InputGroup, Navbar, ProgressBar, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport { AsyncTypeahead, Menu, MenuItem } from \"react-bootstrap-typeahead\";\nimport { DateRangePicker, SingleDatePicker } from \"react-dates\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { FaCalendar as Calendar, FaCalendarWeek as CalendarSpan } from \"react-icons/fa\";\nimport \"./App.css\";\nimport { ResultTable } from \"./components/ResultTable\";\nimport { Airport } from \"./objects/Airport\";\nimport { ClassType } from \"./objects/ClassType\";\nimport { SearchRequest } from \"./objects/SearchRequest\";\nimport { SearchResult } from \"./objects/SearchResult\";\nimport { Timespan } from \"./objects/Timespan\";\nimport { Trip } from \"./objects/Trip\";\nimport { TripType } from \"./objects/TripType\";\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport interface AppState {\n  request: SearchRequest;\n  searching: boolean;\n  result?: SearchResult;\n  allowNew: boolean;\n  isLoading: boolean;\n  multiple: boolean;\n  options: Airport[];\n  departureFlexible: boolean;\n  departureFocused: boolean | null;\n  departureSpanFocused: \"startDate\" | \"endDate\" | null;\n  returnFlexible: boolean;\n  returnFocused: boolean | null;\n  returnSpanFocused: \"startDate\" | \"endDate\" | null;\n  filteredTrips?: Trip[];\n  foundAirlines?: string[];\n  airlineFilter: Object;\n  airportFilter: Object;\n}\n\nlet tripTypes: string[] = [];\nfor (var t in TripType) {\n  tripTypes.push(TripType[t]);\n}\nlet classTypes: string[] = [];\nfor (var c in ClassType) {\n  classTypes.push(ClassType[c]);\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state: Readonly<AppState> = {\n    request: new SearchRequest(),\n    searching: false,\n    allowNew: false,\n    isLoading: false,\n    multiple: false,\n    options: [],\n    departureFlexible: false,\n    departureFocused: false,\n    departureSpanFocused: null,\n    returnFlexible: false,\n    returnFocused: false,\n    returnSpanFocused: null,\n    airlineFilter: {},\n    airportFilter: {},\n  };\n\n  changeRequest(attr: string, value: any) {\n    let temp: SearchRequest = this.state.request;\n    temp[attr] = value;\n    this.setState({ request: temp });\n  }\n\n  performSearch() {\n    this.setState({ searching: true });\n    axios\n      .post(`${apiUrl}/flights`, this.state.request)\n      .then((result) => {\n        this.setState({\n          result: result.data,\n          searching: false,\n          filteredTrips: result.data.trips,\n        });\n        this.initTripFilters();\n      })\n      .catch((error) => {\n        console.error(error);\n        this.setState({ searching: false });\n      });\n  }\n\n  getAirports(value: string) {\n    axios\n      .get(`${apiUrl}/airports?query=${value}`)\n      .then((result) => {\n        this.setState({ options: result.data });\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  getPassengerTitle(): string {\n    if (!this.state.request.passengers) {\n      return \"Passengers\";\n    }\n    const passengers: number = +this.state.request.passengers;\n    return `${passengers} Passenger${passengers === 1 ? \"\" : \"s\"}`;\n  }\n\n  dateToMoment(date: string | undefined): moment.Moment {\n    return date ? moment(date, \"DD.MM.YYYY\") : moment(new Date());\n  }\n\n  initReturnDate() {\n    const departure = this.dateToMoment(this.state.request.departure?.from);\n    let returnDate = this.dateToMoment(this.state.request.return?.from);\n\n    if (departure.isAfter(returnDate)) {\n      this.changeRequest(\"return\", this.state.request.departure);\n    }\n  }\n\n  initTripFilters() {\n    const trips = this.state.result?.trips;\n    if (trips) {\n      let airlines: string[] = [];\n      let airlineFilter = {};\n      trips.forEach((trip) => {\n        if (trip.airlines) {\n          trip.airlines.forEach((airline) => {\n            if (!airlines.includes(airline)) {\n              airlines.push(airline);\n              airlineFilter[airline] = true;\n            }\n          });\n        }\n      });\n      this.setState({ foundAirlines: airlines, airlineFilter: airlineFilter });\n    }\n    const sourceAirports = this.state.result?.sourceAirports;\n    if (sourceAirports) {\n      const airportFilter = {};\n      sourceAirports.forEach((airport) => {\n        if (airport.name) {\n          airportFilter[airport.name] = true;\n        }\n      });\n      this.setState({ airportFilter: airportFilter });\n    }\n  }\n\n  filterTrips() {\n    const trips: Trip[] | undefined = this.state.result?.trips;\n    const airlineFilter = this.state.airlineFilter;\n    const airportFilter = this.state.airportFilter;\n    if (!trips || !airlineFilter) {\n      return;\n    }\n    let filteredTrips: Trip[] = [];\n    trips.forEach((trip) => {\n      let keepTrip = true;\n      trip.airlines?.forEach((airline) => {\n        if (!airlineFilter[airline]) {\n          keepTrip = false;\n        }\n      });\n      const outwardRoute = trip.outwardFlight?.route;\n      if (outwardRoute) {\n        const outwardAirport = outwardRoute[0].source?.name;\n        if (outwardAirport) {\n          keepTrip = keepTrip && airportFilter[outwardAirport];\n        }\n      }\n      const returnRoute = trip.returnFlight?.route;\n      if (returnRoute) {\n        const returnAirport = returnRoute[returnRoute.length - 1].target?.name;\n        if (returnAirport) {\n          keepTrip = keepTrip && airportFilter[returnAirport];\n        }\n      }\n      if (keepTrip) {\n        filteredTrips.push(trip);\n      }\n    });\n    this.setState({ filteredTrips: filteredTrips });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar className=\"shadow\">\n          <Navbar.Brand href=\"#home\">\n            <Row>\n              <img\n                alt=\"Featherkraken\"\n                src=\"./logo512.png\"\n                width=\"50\"\n                height=\"50\"\n                className=\"d-inline-block align-top ml-3 mr-3\"\n              />\n              <h2>Featherkraken</h2>\n            </Row>\n          </Navbar.Brand>\n        </Navbar>\n        <Form className=\"m-5\">\n          <Row className=\"ml-3\">\n            <DropdownButton\n              variant=\"outline\"\n              id=\"tripType\"\n              title={this.state.request.tripType}\n              className=\"mr-1\"\n              onSelect={(eventKey: any) => {\n                this.changeRequest(\"tripType\", eventKey);\n              }}\n            >\n              {tripTypes.map((name) => {\n                return (\n                  <Dropdown.Item key={tripTypes.indexOf(name)} eventKey={name}>\n                    {name}\n                  </Dropdown.Item>\n                );\n              })}\n            </DropdownButton>\n            <DropdownButton\n              variant=\"outline\"\n              id=\"passengers\"\n              title={this.getPassengerTitle()}\n              className=\"mr-1\"\n            >\n              <Form.Control\n                type=\"number\"\n                min=\"1\"\n                defaultValue=\"1\"\n                onChange={(event: any) => {\n                  this.changeRequest(\"passengers\", event.target.value);\n                }}\n              />\n            </DropdownButton>\n            <DropdownButton\n              variant=\"outline\"\n              id=\"classType\"\n              title={this.state.request.classType}\n              onSelect={(eventKey: any) => {\n                this.changeRequest(\"classType\", eventKey);\n              }}\n            >\n              {classTypes.map((name) => {\n                return (\n                  <Dropdown.Item key={classTypes.indexOf(name)} eventKey={name}>\n                    {name}\n                  </Dropdown.Item>\n                );\n              })}\n              <Dropdown.Divider />\n              <Form.Check\n                type=\"checkbox\"\n                name=\"mixClasses\"\n                label=\"Mix classes\"\n                className=\"ml-1\"\n                defaultChecked\n                onChange={(event: any) =>\n                  this.changeRequest(\"mixClasses\", event.target.checked)\n                }\n              />\n            </DropdownButton>\n            <DropdownButton\n              variant=\"outline\"\n              id=\"stops\"\n              title=\"Filter stops\"\n              className=\"mr-1\"\n            >\n              <ButtonGroup className=\"ml-3\" vertical>\n                <Form.Check\n                  type=\"radio\"\n                  name=\"stops\"\n                  label=\"Any\"\n                  defaultChecked\n                  onChange={() => {\n                    this.changeRequest(\"stops\", null);\n                  }}\n                />\n                <Form.Check\n                  type=\"radio\"\n                  name=\"stops\"\n                  label=\"Non-stop\"\n                  onChange={() => {\n                    this.changeRequest(\"stops\", 0);\n                  }}\n                />\n                <Form.Check\n                  type=\"radio\"\n                  name=\"stops\"\n                  label=\"Up to 1 stop\"\n                  onChange={() => {\n                    this.changeRequest(\"stops\", 1);\n                  }}\n                />\n                <Form.Check\n                  type=\"radio\"\n                  name=\"stops\"\n                  label=\"Up to 2 stops\"\n                  onChange={() => {\n                    this.changeRequest(\"stops\", 2);\n                  }}\n                />\n              </ButtonGroup>\n            </DropdownButton>\n            <DropdownButton\n              variant=\"outline\"\n              id=\"stops\"\n              title={`${this.state.request.limit} Results`}\n              className=\"mr-1\"\n            >\n              <Form.Control\n                type=\"number\"\n                min=\"0\"\n                max=\"1000\"\n                step={25}\n                defaultValue={this.state.request.limit}\n                onChange={(event: any) => {\n                  this.changeRequest(\"limit\", event.target.value);\n                }}\n              />\n            </DropdownButton>\n          </Row>\n          <Row className=\"mt-3 ml-3 mr-3\">\n            <Form.Group as={Col} controlId=\"source\">\n              <AsyncTypeahead\n                {...this.state}\n                id=\"source\"\n                labelKey={(airport: Airport) =>\n                  `${airport.displayName} ${airport.name}`\n                }\n                placeholder=\"Source\"\n                minLength={2}\n                onSearch={(query: string) => this.getAirports(query)}\n                onChange={(airports: Airport[]) => {\n                  this.changeRequest(\"source\", airports[0]);\n                }}\n                renderMenu={(airports, menuProps) => (\n                  <Menu {...menuProps}>\n                    {airports.map((airport, index) => (\n                      <MenuItem option={airport} position={index} key={index}>\n                        {airport.displayName} {airport.name}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                )}\n              />\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"distance\" lg=\"2\">\n              <InputGroup>\n                <Form.Control\n                  type=\"number\"\n                  min=\"0\"\n                  step={100}\n                  defaultValue={this.state.request.radius}\n                  onChange={(event: any) => {\n                    this.changeRequest(\"radius\", event.target.value);\n                  }}\n                />\n                <InputGroup.Append>\n                  <InputGroup.Text id=\"km-addon\">km</InputGroup.Text>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form.Group>\n            <Form.Group as={Col} controlId=\"target\">\n              <AsyncTypeahead\n                {...this.state}\n                id=\"target\"\n                labelKey={(airport: Airport) =>\n                  `${airport.displayName} ${airport.name}`\n                }\n                placeholder=\"Target location\"\n                minLength={2}\n                onSearch={(query: string) => this.getAirports(query)}\n                onChange={(airports: Airport[]) => {\n                  this.changeRequest(\"target\", airports[0]);\n                }}\n                renderMenu={(airports, menuProps) => (\n                  <Menu {...menuProps}>\n                    {airports.map((airport, index) => (\n                      <MenuItem option={airport} position={index} key={index}>\n                        {airport.displayName} {airport.name}\n                      </MenuItem>\n                    ))}\n                  </Menu>\n                )}\n              />\n            </Form.Group>\n            <Form.Group\n              as={Col}\n              controlId=\"departure\"\n              className=\"mr-3 border rounded\"\n              lg=\"2\"\n            >\n              <ToggleButtonGroup\n                type=\"checkbox\"\n                onChange={(event: any) => {\n                  this.setState({\n                    departureFlexible: event.indexOf(\"departureFlexible\") > -1,\n                  });\n                }}\n              >\n                <ToggleButton\n                  variant=\"light\"\n                  type=\"checkbox\"\n                  value=\"departureFlexible\"\n                >\n                  {this.state.departureFlexible ? (\n                    <Calendar title=\"Exact date\" />\n                  ) : (\n                    <CalendarSpan title=\"Flexible date\" />\n                  )}\n                </ToggleButton>\n              </ToggleButtonGroup>\n              {this.state.departureFlexible ? (\n                <DateRangePicker\n                  firstDayOfWeek={1}\n                  startDate={this.dateToMoment(\n                    this.state.request?.departure?.from\n                  )}\n                  startDateId=\"departureFrom\"\n                  endDate={this.dateToMoment(this.state.request?.departure?.to)}\n                  endDateId=\"departureTo\"\n                  onDatesChange={({ startDate, endDate }) => {\n                    const departure: Timespan = {\n                      from: startDate?.format(\"DD.MM.YYYY\"),\n                      to: endDate?.format(\"DD.MM.YYYY\"),\n                    };\n                    this.changeRequest(\"departure\", departure);\n                  }}\n                  focusedInput={this.state.departureSpanFocused}\n                  onFocusChange={(focused) =>\n                    this.setState({ departureSpanFocused: focused })\n                  }\n                  displayFormat=\"DD.MM.YYYY\"\n                  noBorder={true}\n                ></DateRangePicker>\n              ) : (\n                <SingleDatePicker\n                  id=\"departure\"\n                  firstDayOfWeek={1}\n                  date={this.dateToMoment(this.state.request?.departure?.from)}\n                  focused={this.state.departureFocused}\n                  onFocusChange={(focused) =>\n                    this.setState({ departureFocused: focused.focused })\n                  }\n                  onDateChange={(date) => {\n                    const departure: Timespan = {\n                      from: date?.format(\"DD.MM.YYYY\"),\n                    };\n                    this.changeRequest(\"departure\", departure);\n                  }}\n                  displayFormat=\"DD.MM.YYYY\"\n                  noBorder={true}\n                ></SingleDatePicker>\n              )}\n            </Form.Group>\n            {this.state.request.tripType === TripType.RoundTrip ? (\n              <Form.Group\n                as={Col}\n                controlId=\"return\"\n                lg=\"2\"\n                className=\"mr-3 border rounded\"\n              >\n                <ToggleButtonGroup\n                  type=\"checkbox\"\n                  onChange={(event: any) => {\n                    this.setState({\n                      returnFlexible: event.indexOf(\"returnFlexible\") > -1,\n                    });\n                  }}\n                >\n                  <ToggleButton\n                    variant=\"light\"\n                    type=\"checkbox\"\n                    value=\"returnFlexible\"\n                  >\n                    {this.state.returnFlexible ? (\n                      <Calendar title=\"Exact date\" />\n                    ) : (\n                      <CalendarSpan title=\"Flexible date\" />\n                    )}\n                  </ToggleButton>\n                </ToggleButtonGroup>\n                {this.state.returnFlexible ? (\n                  <DateRangePicker\n                    firstDayOfWeek={1}\n                    startDate={this.dateToMoment(\n                      this.state.request?.return?.from\n                    )}\n                    startDateId=\"returnFrom\"\n                    endDate={this.dateToMoment(this.state.request?.return?.to)}\n                    endDateId=\"returnTo\"\n                    onDatesChange={({ startDate, endDate }) => {\n                      const returnTime: Timespan = {\n                        from: startDate?.format(\"DD.MM.YYYY\"),\n                        to: endDate?.format(\"DD.MM.YYYY\"),\n                      };\n                      this.changeRequest(\"return\", returnTime);\n                    }}\n                    focusedInput={this.state.returnSpanFocused}\n                    onFocusChange={(focused) => {\n                      if (focused) {\n                        this.initReturnDate();\n                      }\n                      this.setState({ returnSpanFocused: focused });\n                    }}\n                    displayFormat=\"DD.MM.YYYY\"\n                    noBorder={true}\n                  ></DateRangePicker>\n                ) : (\n                  <SingleDatePicker\n                    id=\"return\"\n                    firstDayOfWeek={1}\n                    date={this.dateToMoment(this.state.request?.return?.from)}\n                    focused={this.state.returnFocused}\n                    onFocusChange={(focused) => {\n                      if (focused.focused) {\n                        this.initReturnDate();\n                      }\n                      this.setState({ returnFocused: focused.focused });\n                    }}\n                    onDateChange={(date) => {\n                      const returnTime: Timespan = {\n                        from: date?.format(\"DD.MM.YYYY\"),\n                      };\n                      this.changeRequest(\"return\", returnTime);\n                    }}\n                    displayFormat=\"DD.MM.YYYY\"\n                    noBorder={true}\n                  ></SingleDatePicker>\n                )}\n              </Form.Group>\n            ) : (\n              \"\"\n            )}\n          </Row>\n          <Row className=\"justify-content-md-center mt-3\">\n            <Button variant=\"primary\" onClick={() => this.performSearch()}>\n              Search\n            </Button>\n          </Row>\n          {this.state.searching ? (\n            <ProgressBar className=\"m-3\" animated now={100} />\n          ) : (\n            \"\"\n          )}\n          <Row>\n            {this.state.result?.sourceAirports &&\n            this.state.result.sourceAirports.length > 1 ? (\n              <DropdownButton\n                variant=\"outline\"\n                id=\"sourceAirports\"\n                title=\"Filter airports\"\n                className=\"ml-3\"\n              >\n                {this.state.result.sourceAirports?.map((airport, index) => {\n                  return (\n                    <Form.Check\n                      className=\"ml-3\"\n                      id={`cb-${airport.name}`}\n                      key={index}\n                      type=\"checkbox\"\n                      name={airport.name}\n                      label={`${airport.displayName} ${airport.name}`}\n                      defaultChecked\n                      onChange={(event: any) => {\n                        let airportFilter = this.state.airportFilter;\n                        airportFilter[event.target.name] = event.target.checked;\n                        this.setState({ airportFilter: airportFilter });\n                        this.filterTrips();\n                      }}\n                    />\n                  );\n                })}\n              </DropdownButton>\n            ) : (\n              \"\"\n            )}\n            {this.state.foundAirlines && this.state.foundAirlines.length > 1 ? (\n              <DropdownButton\n                variant=\"outline\"\n                id=\"airlineFilter\"\n                title=\"Filter airlines\"\n                className=\"ml-3\"\n              >\n                {this.state.foundAirlines.map((airline, index) => {\n                  return (\n                    <Row className=\"ml-1\" key={`row-${airline}`}>\n                      <Col>\n                        <Form.Check\n                          type=\"checkbox\"\n                          name={airline}\n                          label={airline}\n                          defaultChecked\n                          onChange={(event: any) => {\n                            let airlineFilter = this.state.airlineFilter;\n                            airlineFilter[event.target.name] =\n                              event.target.checked;\n                            this.setState({ airlineFilter: airlineFilter });\n                            this.filterTrips();\n                          }}\n                        />\n                      </Col>\n                      <Col>\n                        <img\n                          alt={`Airline ${airline}`}\n                          src={`https://images.kiwi.com/airlines/64/${airline}.png`}\n                          height=\"20px\"\n                        />\n                      </Col>\n                    </Row>\n                  );\n                })}\n              </DropdownButton>\n            ) : (\n              \"\"\n            )}\n          </Row>\n        </Form>\n        <ResultTable trips={this.state.filteredTrips} />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}